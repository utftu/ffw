"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");const t=e.createContext(null);class s{value="";touched=!1;error="";name="";getForm=null;listeners=[];constructor({name:e,value:t="",touched:s=!1,error:i="",getForm:l}){this.getForm=l,this.name=e,this.value=t,this.touched=s,this.error=i}setError(e){this.error=e,this.triggerListeners()}setTouched(e){this.touched=e,this.triggerListeners()}set(e){this.value=e,this.triggerListeners()}async validate(){const e=this.getForm().validationsSchema.fields[this.name];if(e)try{await e.validate(this.value)}catch(e){this.setError(e.errors[0])}}onChange=e=>{this.set(e.target.value),this.getForm().options.validateOnChange&&this.validate()};onBlur=()=>{this.setTouched(!0),this.getForm().options.validateOnBlur&&this.validate()};getInputField=()=>({value:this.value,name:this.name,onChange:this.onChange,onBlur:this.onBlur});getSelectField=()=>({value:this.value,name:this.name,onChange:e=>{this.value=e,this.touched=!0,this.triggerListeners(),(this.getForm().options.validateOnChange||this.getForm().options.validateOnBlur)&&this.validate()},onBlur:this.onBlur});triggerListeners(){this.listeners.forEach((e=>e(this)))}}class i{options={validateOnChange:!0,validateOnBlur:!0};fields={};f=null;validationsSchema=null;globalListeners=[];globalFieldListener=e=>{this.globalListeners.forEach((t=>t(e)))};constructor({initValues:e,validateSchema:t,options:i}){this.f=this.fields,this.validationsSchema=t,this.options={...this.options,...i},Object.entries(e).forEach((([e,t])=>{this.fields[e]=new s({name:e,value:t,form:this,getForm:()=>this})}))}_addGlobalListener(e){0===this.globalListeners.length&&Object.values(this.fields).forEach((e=>{e.listeners.push(this.globalFieldListener)})),this.globalListeners.push(e)}_removeGlobalListener(e){this.globalListeners=this.globalListeners.filter((t=>e!==t)),0===this.globalListeners.length&&Object.values(this.fields).forEach((e=>{e.listeners=e.listeners.filter((e=>this.globalFieldListener!==e))}))}_addField(e,t){this.fields[e]=t,this.globalListeners.length&&this.fields[e].listeners.push(this.globalListeners)}async validate(){let e=!1;for(const[t,s]of Object.entries(this.fields))try{await this.validationsSchema.validateAt(t,s.value)}catch(e){e=!0}return!0}getValues(){return Object.entries(this.fields).reduce(((e,[t,s])=>(e[t]=s.value,e)),{})}}const l=t.Provider;exports.FfsProvider=l,exports.useFfs=function(...i){const l=e.useContext(t),[,r]=e.useState(null);e.useMemo((()=>{i.forEach((e=>{!function(e,t){e.fields[t]||e._addField(t,new s({name:t}))}(l,e)}))}),i);const a=e.useMemo((()=>"development"===process.env.NODE_ENV?createFormProxy(l,i):null),[]);return e.useEffect((()=>{const e=()=>{r({})};return 0===i.length?l._addGlobalListener(e):i.forEach((e=>{l.fields[e].listeners=[...l.fields[e].listeners,r]})),()=>{0===i.length?l._addGlobalListener(e):i.forEach((t=>{l.fields[t].listeners=l.fields[t].listeners.filter((t=>t!==e))}))}}),[i]),"development"===process.env.NODE_ENV?a:l},exports.useGlobalFfs=function(...t){return e.useMemo((()=>new i(...t)),[])};
